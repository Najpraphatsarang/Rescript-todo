// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

function reducer(state, action) {
  switch (action.TAG) {
    case "AddTodo" :
        var newTodo_id = state.nextId;
        var newTodo_content = action._0;
        var newTodo_detail = action._1;
        var newTodo_date = action._2;
        var newTodo_time = action._3;
        var newTodo = {
          id: newTodo_id,
          content: newTodo_content,
          detail: newTodo_detail,
          completed: false,
          date: newTodo_date,
          time: newTodo_time
        };
        var todos = state.todos.concat([newTodo]);
        return {
                todos: todos,
                nextId: state.nextId + 1 | 0
              };
    case "RemoveTodo" :
        var id = action._0;
        var todos$1 = state.todos.filter(function (todo) {
              return todo.id !== id;
            });
        return {
                todos: todos$1,
                nextId: state.nextId
              };
    case "ToggleTodo" :
        var id$1 = action._0;
        var todos$2 = Belt_Array.map(state.todos, (function (todo) {
                if (todo.id === id$1) {
                  return {
                          id: todo.id,
                          content: todo.content,
                          detail: todo.detail,
                          completed: !todo.completed,
                          date: todo.date,
                          time: todo.time
                        };
                } else {
                  return todo;
                }
              }));
        return {
                todos: todos$2,
                nextId: state.nextId
              };
    
  }
}

var initialTodos = [{
    id: 1,
    content: "Try ReScript & React",
    detail: "Learn how to use ReScript with React",
    completed: false,
    date: "2024-08-03",
    time: "10:00"
  }];

function TodoHome(props) {
  var match = React.useReducer(reducer, {
        todos: initialTodos,
        nextId: 2
      });
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setText = match$1[1];
  var text = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setDetail = match$2[1];
  var detail = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setDate = match$3[1];
  var date = match$3[0];
  var match$4 = React.useState(function () {
        return "";
      });
  var setTime = match$4[1];
  var time = match$4[0];
  var match$5 = React.useState(function () {
        return "";
      });
  var setSearchText = match$5[1];
  var searchText = match$5[0];
  var handleInputChange = function ($$event) {
    var value = $$event.target.value;
    setText(function (param) {
          return value;
        });
  };
  var handleDetailChange = function ($$event) {
    var value = $$event.target.value;
    setDetail(function (param) {
          return value;
        });
  };
  var handleDateChange = function ($$event) {
    var value = $$event.target.value;
    setDate(function (param) {
          return value;
        });
  };
  var handleTimeChange = function ($$event) {
    var value = $$event.target.value;
    setTime(function (param) {
          return value;
        });
  };
  var handleKeyUp = function ($$event) {
    if ($$event.key === "Enter" && text !== "" && detail !== "") {
      dispatch({
            TAG: "AddTodo",
            _0: text,
            _1: detail,
            _2: date,
            _3: time
          });
      setText(function (param) {
            return "";
          });
      setDetail(function (param) {
            return "";
          });
      setDate(function (param) {
            return "";
          });
      return setTime(function (param) {
                  return "";
                });
    }
    
  };
  var handleAddClick = function (param) {
    if (text !== "" && detail !== "") {
      dispatch({
            TAG: "AddTodo",
            _0: text,
            _1: detail,
            _2: date,
            _3: time
          });
      setText(function (param) {
            return "";
          });
      setDetail(function (param) {
            return "";
          });
      setDate(function (param) {
            return "";
          });
      return setTime(function (param) {
                  return "";
                });
    }
    
  };
  var handleSearchChange = function ($$event) {
    var value = $$event.target.value;
    setSearchText(function (param) {
          return value;
        });
  };
  var filteredTodos = Belt_Array.keep(match[0].todos, (function (todo) {
          if (todo.content.includes(searchText)) {
            return true;
          } else {
            return todo.detail.includes(searchText);
          }
        }));
  var todos = Belt_Array.map(filteredTodos, (function (todo) {
          return JsxRuntime.jsxs("li", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("div", {
                                      children: todo.content,
                                      className: "font-bold"
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: todo.detail
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Date: " + todo.date
                                    }),
                                JsxRuntime.jsx("div", {
                                      children: "Time: " + todo.time
                                    })
                              ]
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Remove",
                              className: "mt-2 text-red-500",
                              onClick: (function (param) {
                                  dispatch({
                                        TAG: "RemoveTodo",
                                        _0: todo.id
                                      });
                                })
                            }),
                        JsxRuntime.jsx("input", {
                              className: "ml-2",
                              checked: todo.completed,
                              type: "checkbox",
                              onChange: (function (param) {
                                  dispatch({
                                        TAG: "ToggleTodo",
                                        _0: todo.id
                                      });
                                })
                            })
                      ],
                      className: "border p-4 mb-4 rounded shadow"
                    }, todo.id.toString());
        }));
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Todo List:",
                      className: "text-2xl font-bold mb-4"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs("label", {
                              children: [
                                "Name: ",
                                JsxRuntime.jsx("input", {
                                      className: "border p-2 rounded w-full",
                                      placeholder: "Enter new todo",
                                      type: "text",
                                      value: text,
                                      onKeyUp: handleKeyUp,
                                      onChange: handleInputChange
                                    })
                              ],
                              className: "block mb-2"
                            }),
                        JsxRuntime.jsxs("label", {
                              children: [
                                "Detail: ",
                                JsxRuntime.jsx("input", {
                                      className: "border p-2 rounded w-full",
                                      placeholder: "Enter todo detail",
                                      type: "text",
                                      value: detail,
                                      onKeyUp: handleKeyUp,
                                      onChange: handleDetailChange
                                    })
                              ],
                              className: "block mb-2"
                            }),
                        JsxRuntime.jsxs("label", {
                              children: [
                                "Date: ",
                                JsxRuntime.jsx("input", {
                                      className: "border p-2 rounded w-full",
                                      type: "date",
                                      value: date,
                                      onKeyUp: handleKeyUp,
                                      onChange: handleDateChange
                                    })
                              ],
                              className: "block mb-2"
                            }),
                        JsxRuntime.jsxs("label", {
                              children: [
                                "Time: ",
                                JsxRuntime.jsx("input", {
                                      className: "border p-2 rounded w-full",
                                      type: "time",
                                      value: time,
                                      onKeyUp: handleKeyUp,
                                      onChange: handleTimeChange
                                    })
                              ],
                              className: "block mb-2"
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Add Todo",
                              className: "bg-blue-500 text-white p-2 rounded",
                              disabled: text === "" || detail === "",
                              onClick: handleAddClick
                            })
                      ],
                      className: "mb-4"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsxs("label", {
                            children: [
                              "Search: ",
                              JsxRuntime.jsx("input", {
                                    className: "border p-2 rounded w-full",
                                    placeholder: "Search todos",
                                    type: "text",
                                    value: searchText,
                                    onChange: handleSearchChange
                                  })
                            ],
                            className: "block mb-2"
                          }),
                      className: "mb-4"
                    }),
                JsxRuntime.jsx("ul", {
                      children: todos,
                      className: "list-none p-0"
                    })
              ],
              className: "container mx-auto p-4"
            });
}

var make = TodoHome;

export {
  reducer ,
  initialTodos ,
  make ,
}
/* react Not a pure module */
